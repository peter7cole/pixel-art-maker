{"version":3,"sources":["components/App/App.styles.js","components/Grid/Grid.styles.js","components/Grid/Grid.js","components/ColorPicker/ColorPicker.styles.js","components/ColorPicker/ColorPicker.js","components/App/App.js","index.js"],"names":["createUseStyles","app","display","flexDirection","width","height","justifyContent","alignItems","colorSwatchContainer","colorSwatch","margin","padding","outline","border","cursor","grid","gridTemplateRows","gridTemplateColumns","cell","background","transition","transform","Grid","currentColor","cells","setCells","offCell","classes","useStyles","updateCell","i","defaultState","e","preventDefault","map","cellIndex","on","color","className","key","style","onClick","onContextMenu","colorPicker","ColorPicker","onSetColor","type","onChange","event","target","value","initialCells","Array","from","length","App","useState","setCurrentColor","useMemo","Set","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAEeA,cAAgB,CAC9BC,IAAK,CACJC,QAAS,OACTC,cAAe,SACfC,MAAO,OACPC,OAAQ,OACRC,eAAgB,SAChBC,WAAY,UAEbC,qBAAsB,CACrBN,QAAS,QAEVO,YAAa,CACZC,OAAQ,SACRC,QAAS,EACTP,MAAO,OACPC,OAAQ,OACRO,QAAS,OACTC,OAAQ,OACRC,OAAQ,aCnBKd,cAAgB,CAC9Be,KAAM,CACLb,QAAS,QACTc,iBAAkB,iBAClBC,oBAAqB,iBACrBb,MAAO,OACPC,OAAQ,OACRO,QAAS,mBAEVM,KAAM,CACLJ,OAAQ,UACRD,OAAQ,kBACRM,WAAY,QACZC,WAAY,mBACZ,UAAW,CACVC,UAAW,kBCoBCC,EAjCF,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACxCC,EAAUC,IAEVC,EAAa,SAACC,EAAGC,GAAJ,OAAqB,SAAAC,GACvCA,EAAEC,iBACFR,EACCD,EAAMU,KAAI,SAAChB,EAAMiB,GAChB,OAAIA,IAAcL,EACbC,GACG,CACNK,IAAI,EACJC,MAAOd,GAGFL,QAIV,OACC,yBAAKoB,UAAWX,EAAQZ,MACtBS,EAAMU,KAAI,SAAChB,EAAMY,GAAP,OACV,yBACCS,IAAKT,EACLQ,UAAWX,EAAQT,KACnBsB,MAAO,CAAErB,WAAYD,EAAKkB,GAAKlB,EAAKmB,MAAQ,WAC5CI,QAASZ,EAAWC,GACpBY,cAAeb,EAAWC,EAAGJ,UC5BnB1B,cAAgB,CAC9B2C,YAAa,CACZjC,OAAQ,OACRC,QAAS,IACTP,MAAO,OACPC,OAAQ,OACRO,QAAS,OACTC,OAAQ,OACRC,OAAQ,aCWK8B,EAjBK,SAAC,GAAkC,IAAhCrB,EAA+B,EAA/BA,aAAcsB,EAAiB,EAAjBA,WAC9BlB,EAAUC,IAIhB,OACC,6BACC,2BACCkB,KAAK,QACLR,UAAWX,EAAQgB,YACnBI,SARiB,SAAAC,GACnBH,EAAWG,EAAMC,OAAOC,QAQtBA,MAAO3B,MCVLG,EAAU,CACfU,IAAI,EACJC,MAAO,WAEFc,EAAeC,MAAMC,KAAK,CAAEC,OAAQ,KAAM,kBAAM5B,KAiCvC6B,MA/Bf,WAAgB,IAAD,EACYC,mBAASL,GADrB,mBACP3B,EADO,KACAC,EADA,OAE0B+B,mBAAS,WAFnC,mBAEPjC,EAFO,KAEOkC,EAFP,KAGR9B,EAAUC,IACVnB,EAAciD,mBACnB,8BAAU,IAAIC,IAAInC,EAAMoC,QAAO,SAAA1C,GAAI,OAAIA,EAAKkB,MAAIF,KAAI,SAAAhB,GAAI,OAAIA,EAAKmB,aACjE,CAACb,IAEF,OACC,yBAAKc,UAAWX,EAAQ1B,KACvB,kBAAC,EAAD,CAAasB,aAAcA,EAAcsB,WAAYY,IACrD,yBAAKnB,UAAWX,EAAQnB,sBACtBC,EAAYyB,KAAI,SAAAG,GAAK,OACrB,yBACCE,IAAKF,EACLI,QAAS,kBAAMgB,EAAgBpB,IAC/BC,UAAWX,EAAQlB,YACnB+B,MAAO,CAAErB,WAAYkB,SAIxB,kBAAC,EAAD,CACCd,aAAcA,EACdC,MAAOA,EACPC,SAAUA,EACVC,QAASA,MC/BbmC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,W","file":"static/js/main.7b1eb60a.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\n\nexport default createUseStyles({\n\tapp: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t},\n\tcolorSwatchContainer: {\n\t\tdisplay: 'flex',\n\t},\n\tcolorSwatch: {\n\t\tmargin: '0.5rem',\n\t\tpadding: 0,\n\t\twidth: '25px',\n\t\theight: '25px',\n\t\toutline: 'none',\n\t\tborder: 'none',\n\t\tcursor: 'pointer',\n\t},\n});\n","import { createUseStyles } from 'react-jss';\n\nexport default createUseStyles({\n\tgrid: {\n\t\tdisplay: 'grid ',\n\t\tgridTemplateRows: 'repeat(5, 1fr)',\n\t\tgridTemplateColumns: 'repeat(8, 1fr)',\n\t\twidth: '80vw',\n\t\theight: '50vw',\n\t\toutline: '2px solid black',\n\t},\n\tcell: {\n\t\tcursor: 'pointer',\n\t\tborder: '2px solid black',\n\t\tbackground: 'white',\n\t\ttransition: 'all 100ms linear',\n\t\t'&:hover': {\n\t\t\ttransform: 'scale(1.15)',\n\t\t},\n\t},\n});\n","import React from 'react';\nimport useStyles from './Grid.styles';\n// import { nanoid } from 'nanoid';\n\nconst Grid = ({ currentColor, cells, setCells, offCell }) => {\n\tconst classes = useStyles();\n\t// destructuring!\n\tconst updateCell = (i, defaultState) => e => {\n\t\te.preventDefault(); // to prevent context menu\n\t\tsetCells(\n\t\t\tcells.map((cell, cellIndex) => {\n\t\t\t\tif (cellIndex === i) {\n\t\t\t\t\tif (defaultState) return defaultState;\n\t\t\t\t\treturn {\n\t\t\t\t\t\ton: true,\n\t\t\t\t\t\tcolor: currentColor,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn cell;\n\t\t\t})\n\t\t);\n\t};\n\treturn (\n\t\t<div className={classes.grid}>\n\t\t\t{cells.map((cell, i) => (\n\t\t\t\t<div\n\t\t\t\t\tkey={i}\n\t\t\t\t\tclassName={classes.cell}\n\t\t\t\t\tstyle={{ background: cell.on ? cell.color : '#ffffff' }}\n\t\t\t\t\tonClick={updateCell(i)}\n\t\t\t\t\tonContextMenu={updateCell(i, offCell)}\n\t\t\t\t></div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Grid;\n","import { createUseStyles } from 'react-jss';\n\nexport default createUseStyles({\n\tcolorPicker: {\n\t\tmargin: '1rem',\n\t\tpadding: '0',\n\t\twidth: '50px',\n\t\theight: '50px',\n\t\toutline: 'none',\n\t\tborder: 'none',\n\t\tcursor: 'pointer',\n\t},\n});\n","import React from 'react';\nimport useStyles from './ColorPicker.styles';\n\n// pass in props, which is lifted state now passed down from App parent\nconst ColorPicker = ({ currentColor, onSetColor }) => {\n\tconst classes = useStyles();\n\tconst colorChange = event => {\n\t\tonSetColor(event.target.value);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<input\n\t\t\t\ttype=\"color\"\n\t\t\t\tclassName={classes.colorPicker}\n\t\t\t\tonChange={colorChange}\n\t\t\t\tvalue={currentColor}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default ColorPicker;\n","import React, { useState, useMemo } from 'react';\nimport useStyles from './App.styles';\nimport Grid from '../Grid/Grid';\nimport ColorPicker from '../ColorPicker/ColorPicker';\n\nconst offCell = {\n\ton: false,\n\tcolor: '#ffffff',\n};\nconst initialCells = Array.from({ length: 40 }, () => offCell);\n\nfunction App() {\n\tconst [cells, setCells] = useState(initialCells);\n\tconst [currentColor, setCurrentColor] = useState('#ffee00');\n\tconst classes = useStyles();\n\tconst colorSwatch = useMemo(\n\t\t() => [...new Set(cells.filter(cell => cell.on).map(cell => cell.color))],\n\t\t[cells]\n\t);\n\treturn (\n\t\t<div className={classes.app}>\n\t\t\t<ColorPicker currentColor={currentColor} onSetColor={setCurrentColor} />\n\t\t\t<div className={classes.colorSwatchContainer}>\n\t\t\t\t{colorSwatch.map(color => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={color}\n\t\t\t\t\t\tonClick={() => setCurrentColor(color)}\n\t\t\t\t\t\tclassName={classes.colorSwatch}\n\t\t\t\t\t\tstyle={{ background: color }}\n\t\t\t\t\t></div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<Grid\n\t\t\t\tcurrentColor={currentColor}\n\t\t\t\tcells={cells}\n\t\t\t\tsetCells={setCells}\n\t\t\t\toffCell={offCell}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}